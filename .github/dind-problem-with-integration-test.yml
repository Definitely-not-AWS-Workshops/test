name: CI

on:
  workflow_dispatch:

  # trigger on push
  push:
    branches:
      - main
    paths:
      - src/**
      - build.gradle
      - settings.gradle
      - .github/workflows/**
      - Dockerfile

  # trigger on pull request
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
    paths:
      - src/**
      - build.gradle
      - settings.gradle
      - .github/workflows/**
      - Dockerfile
env:
  AWS_REGION: us-east-1
  ROLE_TO_ASSUME: abcxyz

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run unit tests
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: unit-test-reporter
          outputs: type=local,dest=reports
          push: false

      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: reports

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run integration tests
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: integration-test-reporter
          outputs: type=local,dest=reports
          push: false
          pull: true

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: integration-test-report
          path: reports

  # unit-test:
  #   needs: compile
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: 17
  #         distribution: temurin
  #         cache: gradle

  #     - uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.gradle/caches
  #           ~/.gradle/wrapper
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: compiled-code
  #         path: .

  #     - run: |
  #         chmod 777 gradlew
  #         ./gradlew test

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: ut-reports
  #         path: build

  # integration-test:
  #   needs: compile
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: 17
  #         distribution: temurin
  #         cache: gradle

  #     - uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.gradle/caches
  #           ~/.gradle/wrapper
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: compiled-code
  #         path: .

  #     - run: |
  #         chmod 777 gradlew
  #         ./gradlew integrationTest

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: it-reports
  #         path: build

  # build:
  #   needs: compile
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     security-events: write
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: 17
  #         distribution: temurin
  #         cache: gradle

  #     - uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.gradle/caches
  #           ~/.gradle/wrapper
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: compiled-code
  #         path: .

  #     - run: |
  #         chmod 777 gradlew
  #         ./gradlew build -x test

  #     - name: Code vulnerability scanning
  #       uses: anchore/scan-action@v3
  #       id: scan
  #       with:
  #         path: "${{ github.workspace }}"
  #         fail-build: true
  #         output-format: table
  #         severity-cutoff: high

  # - name: Upload vulnerability report
  #   uses: github/codeql-action/upload-sarif@v3
  #   if: ${{ !cancelled() }}
  #   with:
  #     sarif_file: ${{ steps.scan.outputs.sarif }}

  # build:

  #   name: Build Docker image
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 20
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: ${{ env.ROLE_TO_ASSUME }}
  #         role-session-name: github-actions-${{ env.APP_NAME }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Amazon ECR Private
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v2

  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       env: steps.login-ecr.outputs.registry

  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.sha_short.outputs.sha_short }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache
  #         provenance: false
#   scan-code-vulnerabilities:
#     runs-on: ubuntu-latest
#     timeout-minutes: 20
#     steps:
#       - uses: actions/checkout@v4

#  scan-image-vulnerabilities:
#     runs-on: ubuntu-latest
#     timeout-minutes: 20
#     steps:
#         - uses: actions/checkout@v4
#   test:
#     runs-on: ubuntu-latest
#     timeout-minutes: 20
#     steps:
#       - uses: actions/checkout@v4

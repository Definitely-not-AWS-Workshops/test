name: Rollback

on:
  # Allow manual rollback
  workflow_dispatch:
    inputs:
      version:
        description: Specify the semantic version to rollback to, in the format "v*.*.*" (e.g., "v0.0.1")
        type: string
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  check-semantic-version:
    name: Check semantic version
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: ${{ vars.PROJECT }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: .github/scripts
          # sparse-checkout-cone-mode: false

      - run: ls

      - name: Validate format of semantic version ${{ inputs.version }}
        run: ./validate-version-format.sh ${{ inputs.version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.ROLL_TO_ASSUME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Check version ${{ inputs.version }} existed in AWS ECR repository ${{ env.ECR_REPOSITORY }}
        run: ./check-version-exists.sh ${{ env.ECR_REPOSITORY }} ${{ inputs.version }}

  # rollback:
  #   name: Rollback
  #   needs: [check-sem-version]
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     rollback: true
  #     aws-region: ${{ vars.AWS_REGION }}
  #     role-to-assume: ${{ vars.ROLL_TO_ASSUME }}
  #     ecr-repository: ${{ vars.PROJECT }}
  #     image-tag: ${{ inputs.version }}
  #     task-definition: ${{ vars.PROJECT }}
  #     container-name: ${{ vars.PROJECT }}
  #     ecs-cluster: ${{ vars.ECS_CLUSTER }}
  #     ecs-service: ${{ vars.PROJECT }}
  #     codedeploy-application: ${{ vars.CODEDEPLOY_APPLICATION }}
  #     codedeploy-application-group: ${{ vars.CODEDEPLOY_APPLICATION_GROUP }}
